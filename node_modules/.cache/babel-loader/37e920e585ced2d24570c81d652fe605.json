{"ast":null,"code":"var _jsxFileName = \"/home/anastasiia/Documents/react-complete-guide-code/code/07-sending-a-post-request/src/components/AddMovie.js\";\nimport React, { useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\n\nasync function addMovieHandler(movie) {\n  try {\n    const response = await fetch(\"https://weighty-arcadia-339712-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    setError(error.message);\n  }\n}\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n  const [resultOfAddingMovie, setResultAddMovie] = useState('');\n\n  function submitHandler(event) {\n    event.preventDefault(); // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value\n    };\n    titleRef.current.value = '';\n    openingTextRef.current.value = '';\n    releaseDateRef.current.value = '';\n    addMovieHandler(movie);\n    setResultAddMovie('Sucses');\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, resultOfAddingMovie), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"opening-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Opening Text\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"5\",\n    id: \"opening-text\",\n    ref: openingTextRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"date\",\n    ref: releaseDateRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Add Movie\"));\n}\n\nexport default AddMovie;","map":{"version":3,"sources":["/home/anastasiia/Documents/react-complete-guide-code/code/07-sending-a-post-request/src/components/AddMovie.js"],"names":["React","useRef","useState","classes","addMovieHandler","movie","response","fetch","method","body","JSON","stringify","headers","data","json","console","log","error","setError","message","AddMovie","props","titleRef","openingTextRef","releaseDateRef","resultOfAddingMovie","setResultAddMovie","submitHandler","event","preventDefault","title","current","value","openingText","releaseDate","control"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nasync function addMovieHandler(movie) {\n  try {\n    const response = await fetch(\n      \"https://weighty-arcadia-339712-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    setError(error.message);\n  }\n}\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n  const [resultOfAddingMovie, setResultAddMovie] = useState('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    titleRef.current.value = '';\n    openingTextRef.current.value = '';\n    releaseDateRef.current.value = '';\n\n    addMovieHandler(movie);\n    setResultAddMovie('Sucses')\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <p>{resultOfAddingMovie}</p>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n"]},"metadata":{},"sourceType":"module"}